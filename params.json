{"name":"Py-vlcclient","body":"py-vlcclient\r\n============\r\n\r\nThis module allows to control a VLC instance using Python. This\r\nmodule uses the telnet interface of VLC and has no external dependencies.\r\n\r\nMore information about the telnet interface:\r\nhttp://wiki.videolan.org/Documentation:Streaming_HowTo/VLM\r\n\r\nThe clients supports some basic commands to modify playlists and control the playback.\r\n\r\nHow to Use\r\n==========\r\n\r\nFirst start VLC and enable the telnet interface. You can either enable\r\nit when starting VLC::\r\n\r\n   $ vlc --intf telnet\r\n\r\nor via the menus (depending on your platform, mostly View ->\r\nAdd Interface -> Telnet).\r\n\r\nFor example:\r\n\r\n```\r\n  >>> from vlcclient import VLCClient\r\n  >>> vlc = VLCClient(\"::1\")\r\n  >>> vlc.connect()\r\n  >>>\r\n  >>> r.add(\"/home/mitch/Music/a_song.ogg\")\r\n  >>> r.volume(300)\r\n  >>> r.rewind()\r\n  >>> r.status()\r\n  '( new input: file:///.... )\r\n   ( audio volume: 200 )\r\n   ( state playing )'\r\n```\r\n\r\nImplemented Commands\r\n====================\r\n\r\nThe following commands are currently implemented:\r\n\r\ngeneric\r\n-------\r\n\r\n * help\r\n * status\r\n * info\r\n\r\nplaylists and controls\r\n----------------------\r\n\r\n * add\r\n * enqueue\r\n * seek\r\n * play\r\n * pause\r\n * stop\r\n * rewind\r\n * next\r\n * prev\r\n * clear\r\n\r\nvolume\r\n------\r\n\r\n * volume (get/set)\r\n * volup\r\n * voldown","tagline":"A VLC client written in python","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}